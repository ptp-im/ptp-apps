// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders disabled icon button 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "bottom": undefined,
      "left": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "top": undefined,
    }
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": undefined,
          "borderColor": "rgba(28, 27, 31, 0.12)",
          "borderRadius": 20,
          "borderWidth": 0,
          "elevation": 0,
          "height": 40,
          "margin": 6,
          "overflow": "hidden",
          "width": 40,
        }
      }
    >
      <View
        accessibilityComponentType="button"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessibilityTraits={
          Array [
            "button",
            "disabled",
          ]
        }
        accessible={true}
        centered={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            false,
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "rgba(28, 27, 31, 0.38)",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders icon button by default 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "bottom": undefined,
      "left": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "top": undefined,
    }
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": undefined,
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 20,
          "borderWidth": 0,
          "elevation": 0,
          "height": 40,
          "margin": 6,
          "overflow": "hidden",
          "width": 40,
        }
      }
    >
      <View
        accessibilityComponentType="button"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessibilityTraits="button"
        accessible={true}
        centered={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            false,
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "rgba(73, 69, 79, 1)",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders icon button with color 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "bottom": undefined,
      "left": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "top": undefined,
    }
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": undefined,
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 20,
          "borderWidth": 0,
          "elevation": 0,
          "height": 40,
          "margin": 6,
          "overflow": "hidden",
          "width": 40,
        }
      }
    >
      <View
        accessibilityComponentType="button"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessibilityTraits="button"
        accessible={true}
        centered={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            false,
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#e91e63",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders icon button with size 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "bottom": undefined,
      "left": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "top": undefined,
    }
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": undefined,
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 23,
          "borderWidth": 0,
          "elevation": 0,
          "height": 46,
          "margin": 6,
          "overflow": "hidden",
          "width": 46,
        }
      }
    >
      <View
        accessibilityComponentType="button"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessibilityTraits="button"
        accessible={true}
        centered={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            false,
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "rgba(73, 69, 79, 1)",
                "fontSize": 30,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders icon change animated 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "bottom": undefined,
      "left": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "top": undefined,
    }
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": undefined,
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 20,
          "borderWidth": 0,
          "elevation": 0,
          "height": 40,
          "margin": 6,
          "overflow": "hidden",
          "width": 40,
        }
      }
    >
      <View
        accessibilityComponentType="button"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessibilityTraits="button"
        accessible={true}
        centered={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            false,
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              Object {
                "height": 24,
                "width": 24,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "rotate": "0deg",
                  },
                ],
              }
            }
          >
            <Text
              accessibilityElementsHidden={true}
              importantForAccessibility="no-hide-descendants"
              pointerEvents="none"
              selectable={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "color": "rgba(73, 69, 79, 1)",
                    "fontSize": 24,
                  },
                ]
              }
            >
              □
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

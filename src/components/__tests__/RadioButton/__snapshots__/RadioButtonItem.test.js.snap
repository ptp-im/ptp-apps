// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can render leading radio button control 1`] = `
<View
  accessibilityLabel="Default with leading control"
  accessibilityRole="radio"
  accessibilityState={
    Object {
      "checked": false,
      "disabled": false,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      false,
      false,
      undefined,
    ]
  }
>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        undefined,
      ]
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityRole="radio"
      accessibilityState={
        Object {
          "checked": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 18,
            "padding": 6,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "opacity": 0,
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "rgba(103, 80, 164, 1)",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "rgba(28, 27, 31, 1)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.15,
            "lineHeight": 24,
          },
          Object {
            "textAlign": "left",
          },
          Object {
            "writingDirection": "ltr",
          },
          Array [
            Object {
              "flexGrow": 1,
              "flexShrink": 1,
            },
            false,
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "textAlign": "right",
            },
            undefined,
          ],
        ]
      }
    >
      Default with leading control
    </Text>
  </View>
</View>
`;

exports[`can render the Android radio button on different platforms 1`] = `
<View
  accessibilityLabel="iOS Checkbox"
  accessibilityRole="radio"
  accessibilityState={
    Object {
      "checked": false,
      "disabled": false,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      false,
      false,
      undefined,
    ]
  }
>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgba(28, 27, 31, 1)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.15,
            "lineHeight": 24,
          },
          Object {
            "textAlign": "left",
          },
          Object {
            "writingDirection": "ltr",
          },
          Array [
            Object {
              "flexGrow": 1,
              "flexShrink": 1,
            },
            false,
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "textAlign": "left",
            },
            undefined,
          ],
        ]
      }
    >
      iOS Checkbox
    </Text>
    <View
      accessibilityLiveRegion="polite"
      accessibilityRole="radio"
      accessibilityState={
        Object {
          "checked": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 18,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(73, 69, 79, 1)",
            "borderRadius": 10,
            "borderWidth": 2,
            "height": 20,
            "margin": 8,
            "width": 20,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`can render the iOS radio button on different platforms 1`] = `
<View
  accessibilityLabel="iOS Radio button"
  accessibilityRole="radio"
  accessibilityState={
    Object {
      "checked": false,
      "disabled": false,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      false,
      false,
      undefined,
    ]
  }
>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgba(28, 27, 31, 1)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.15,
            "lineHeight": 24,
          },
          Object {
            "textAlign": "left",
          },
          Object {
            "writingDirection": "ltr",
          },
          Array [
            Object {
              "flexGrow": 1,
              "flexShrink": 1,
            },
            false,
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "textAlign": "left",
            },
            undefined,
          ],
        ]
      }
    >
      iOS Radio button
    </Text>
    <View
      accessibilityLiveRegion="polite"
      accessibilityRole="radio"
      accessibilityState={
        Object {
          "checked": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 18,
            "padding": 6,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "opacity": 0,
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "rgba(103, 80, 164, 1)",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders unchecked 1`] = `
<View
  accessibilityLabel="Unchecked Button"
  accessibilityRole="radio"
  accessibilityState={
    Object {
      "checked": false,
      "disabled": false,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      false,
      false,
      undefined,
    ]
  }
>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgba(28, 27, 31, 1)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.15,
            "lineHeight": 24,
          },
          Object {
            "textAlign": "left",
          },
          Object {
            "writingDirection": "ltr",
          },
          Array [
            Object {
              "flexGrow": 1,
              "flexShrink": 1,
            },
            false,
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "textAlign": "left",
            },
            undefined,
          ],
        ]
      }
    >
      Unchecked Button
    </Text>
    <View
      accessibilityLiveRegion="polite"
      accessibilityRole="radio"
      accessibilityState={
        Object {
          "checked": false,
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 18,
            "padding": 6,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "opacity": 0,
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "rgba(103, 80, 164, 1)",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;
